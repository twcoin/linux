
services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"      
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./conf.d:/etc/nginx/conf.d
      - ./certs:/etc/nginx/certs
      - ./html:/var/www/html
      - ./log/nginx:/var/log/nginx
    #tmpfs:
      #- /var/cache/nginx:rw,noexec,nosuid,size=512m


  php:
    image: php:fpm-alpine
    container_name: php
    restart: always
    volumes:
      - ./html:/var/www/html

  php74:
    image: php:7.4-fpm-alpine
    container_name: php74
    restart: always
    volumes:
      - ./html:/var/www/html

  mysql:
    image: mysql
    container_name: mysql
    restart: always
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: webroot
      MYSQL_USER: kejilion
      MYSQL_PASSWORD: kejilionYYDS

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    volumes:
      - ./redis:/data

  3xui:
  ##docker exec 3xui /app/x-ui setting -show
  ##docker exec 3xui /app/x-ui setting -username xxx -password xxxx
  ##docker compose -f /home/docker/3x-ui.yml up -d
    image: ghcr.io/mhsanaei/3x-ui
    container_name: 3xui
    restart: always
    #network_mode: bridge
    #network_mode: host
    ports:
      - "2053:2053"
      - "27192:27192"
      - "22096:22096"
      - "27468:27468"
      - "8443:8443"
    #expose仅将指定的端口暴露给links的容器，而不对宿主机开放。
    #和ports的区别在于，ports可以映射宿主机别的端口到容器中。
    #expose: 
      #- "3306"
    volumes:
      - ./db_3xui:/etc/x-ui
      - ./certs:/root/cert
      #- $PWD/dbxui:/etc/x-ui
      #- $PWD/certs:/root/cert
    environment:
      XRAY_VMESS_AEAD_FORCED: "false"
      tty: true
    #links将容器与当前容器链接起来，以使得当前容器可以访问目标容器expose的端口
    #格式为 容器的原名:映射到当前容器中的名称
    #links:
      #- app:app
    #依赖的容器列表，只有这些容器都成功启动了，才会启动当前容器
    #depends_on:
      #- php
